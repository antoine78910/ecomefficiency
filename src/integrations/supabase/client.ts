// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

// Resolve env vars safely on client and SSR; if absent, create a no-op client to avoid runtime crash.
const SUPABASE_URL = process.env.NEXT_PUBLIC_SUPABASE_URL;
const SUPABASE_PUBLISHABLE_KEY = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;

export const SUPABASE_CONFIG_OK =
  typeof SUPABASE_URL === "string" && SUPABASE_URL.startsWith("http") &&
  typeof SUPABASE_PUBLISHABLE_KEY === "string" && SUPABASE_PUBLISHABLE_KEY.length > 40;

export const supabase = ((): ReturnType<typeof createClient<Database>> => {
  if (SUPABASE_CONFIG_OK) {
    return createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);
  }
  // Minimal safe fallback: point to example host to prevent "Invalid URL" during SSR.
  // Note: Auth calls will fail until real env vars are provided.
  return createClient<Database>("https://example.supabase.co", "eyJhbGciOiJIUzI1NiJ9.placeholder");
})();